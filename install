#!/bin/sh
# This script installs all required tools and applications for a full stack
# developer.

# DEFAULT SETTINGS
ALL=${ALL:-yes}
APPLICATIONS=${APPLICATIONS:-no}
EXTENSIONS=${EXTENSIONS:-no}
HOMEBREW=${HOMEBREW:-no}
OHMYZSH=${OHMYZSH:-no}
TOOLS=${TOOLS:-no}
LANGUAGES=${LANGUAGES:-no}
XCODE=${XCODE:-no}

command_exists() {
	command -v "$@" >/dev/null 2>&1
}

error() {
	echo ${RED}"Error: $@"${RESET} >&2
}

setup_color() {
	# Only use colors if connected to a terminal
	if [ -t 1 ]; then
		RED=$(printf '\033[31m')
		GREEN=$(printf '\033[32m')
		YELLOW=$(printf '\033[33m')
		BLUE=$(printf '\033[34m')
		BOLD=$(printf '\033[1m')
		RESET=$(printf '\033[m')
	else
		RED=""
		GREEN=""
		YELLOW=""
		BLUE=""
		BOLD=""
		RESET=""
	fi
}

# install xcode command line tools
install_xcode() {
  if [ $ALL = yes ] || [ $XCODE = yes ]; then
    echo
    echo "${YELLOW}==== XCode Command Line Tool ====${RESET}"
    echo
    echo "${BLUE}> xcode-select --install 2>/dev/null ...${RESET}"
    xcode-select --install
    echo "${BLUE}> done${RESET}"
  fi
}

# install homebrew 
install_homebrew() {
  if [ $ALL = yes ] || [ $HOMEBREW = yes ]; then
    echo
    echo "${YELLOW}==== Homebrew ====${RESET}"
    echo
    echo "${BLUE}> /bin/bash -c \"\$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install.sh)\" < /dev/null ...${RESET}"
    /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install.sh)" < /dev/null
    echo "${BLUE}> done${RESET}"
  fi
}

# install oh-my-zsh
install_oh_my_zsh() {
  if [ $ALL = yes ] || [ $OHMYZSH = yes ]; then
    echo
    echo "${YELLOW}==== Oh-My-Zsh ====${RESET}"
    echo
    echo "${BLUE}> sh -c \"\$(curl -fsSL https://raw.github.com/ohmyzsh/ohmyzsh/master/tools/install.sh)\" < /dev/null ...${RESET}"
    sh -c "$(curl -fsSL https://raw.github.com/ohmyzsh/ohmyzsh/master/tools/install.sh)" < /dev/null
    echo "${BLUE}> ln -fs ~/.files/oh-my-zsh/.zshrc ~/.zshrc${RESET}"
    ln -fs ~/.files/oh-my-zsh/.zshrc ~/.zshrc
    echo "${BLUE}> done${RESET}"
  fi
}

# brew install command line tools
install_cli_tools() {
  if [ $ALL = yes ] || [ $TOOLS = yes ]; then
    echo
    echo "${YELLOW}==== Command Line Tools (brew) ====${RESET}"
    echo
    echo "${BLUE}> checking if ${RESET}brew${BLUE} exists${RESET}"

    command_exists brew || {
      error 'brew is not installed'
      exit 1
    }

    tools=(
      asdf
      awscli
      coreutils
      curl
      git
      git-lfs
      gpg
    )

    for tool in ${tools[@]}; do
      echo "${BLUE}> brew install ${tool}${RESET}"
      brew install $tool
      echo "${BLUE}> done${RESET}"
      echo
    done
  fi
}

# asdf install languages
install_languages() {
  if [ $ALL = yes ] || [ $LANGUAGES = yes ]; then
    echo
    echo "${YELLOW}==== Languages (asdf) ====${RESET}"
    echo
    echo "${BLUE}> checking if ${RESET}asdf${BLUE} exists${RESET}"

    command_exists asdf || {
      error 'asdf is not installed'
      exit 1
    }

    languages=(
      dart
      golang
      nodejs
      python
      ruby
      yarn
    )

    for lang in ${languages[@]}; do
      echo "${BLUE}> asdf plugin add ${lang} ...${RESET}"
      asdf plugin add $lang
      echo "${BLUE}> asdf install ${lang} latest ...${RESET}"
      asdf install $lang latest
      echo "${BLUE}> asdf global ${lang} latest ...${RESET}"
      asdf global $lang latest
      echo "${BLUE}> ${lang} done${RESET}"
      echo
    done
  fi
}

# brew cask install applications
install_applications() {
  if [ $ALL = yes ] || [ $APPLICATIONS = yes ]; then
    echo
    echo "${YELLOW}==== Applications (brew cask) ====${RESET}"
    echo
    echo "${BLUE}> checking if ${RESET}brew${BLUE} exists${RESET}"

    command_exists brew || {
      error 'brew is not installed'
      exit 1
    }

    casks=(
      1password
      # chrome
      # docker
      iterm2
      licecap
      moom
      slack
      visual-studio-code
      zoomus
    )

    for cask in ${casks[@]}; do
      echo "${BLUE}> brew cask install ${cask}${RESET}"
      brew cask install $cask
      echo "${BLUE}> done${RESET}"
      echo
    done
  fi
}

# Install VSCode extensions
# list was take using the following command
# > code --list-extensions
install_vscode_extensions() {
  if [ $ALL = yes ] || [ $EXTENSIONS = yes ]; then
    echo
    echo "${YELLOW}==== Visual Studio Code Extensions ====${RESET}"
    echo
    echo "${BLUE}> checking if ${RESET}code${BLUE} exists${RESET}"

    command_exists code || {
      error 'code is not installed'
      exit 1
    }

    extensions=(
      apollographql.vscode-apollo
      CoenraadS.bracket-pair-colorizer-2
      dbaeumer.vscode-eslint
      eamodio.gitlens
      Equinusocio.vsc-community-material-theme
      Equinusocio.vsc-material-theme
      equinusocio.vsc-material-theme-icons
      esbenp.prettier-vscode
      HookyQR.beautify
      # ms-azuretools.vscode-docker
      # ms-kubernetes-tools.vscode-kubernetes-tools
      ms-python.python
      # msjsdiag.debugger-for-chrome
      oderwat.indent-rainbow
      PKief.material-icon-theme
      redhat.vscode-yaml
    )

    for extn in ${extensions[@]}; do
      echo "${BLUE}> code --install-extension ${extn}${RESET}"
      code --install-extension $extn
      echo "${BLUE}> done${RESET}"
      echo
    done
  fi
}

main() {
	# Parse arguments
	while [ $# -gt 0 ]; do
    ALL=no
		case $1 in
			--xcode) XCODE=yes ;;
			--homebrew) HOMEBREW=yes ;;
			--ohmyzsh) OHMYZSH=yes ;;
			--tools) TOOLS=yes ;;
			--languages) LANGUAGES=yes ;;
			--applications) APPLICATIONS=yes ;;
			--extensions) EXTENSIONS=yes ;;
		esac
		shift
	done

  setup_color
  echo
  echo "${GREEN}==== .FILES INSTALLATION ====${RESET}"
  install_xcode
  install_homebrew
  install_oh_my_zsh
  install_cli_tools
  install_languages
  install_applications
  install_vscode_extensions
  echo
  echo "${GREEN}Installation complete!${RESET}"
}

main "$@"
